plugins {
    id 'java'
}

group = 'io.github.math0898'
version = '2.1.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    testImplementation "org.junit.jupiter:junit-jupiter:5.9.0"
    compileOnly "com.gmail.filoghost.holographicdisplays:holographicdisplays-api:2.4.0"
    implementation "org.jetbrains:annotations:23.0.0"
    compileOnly "uk.antiperson.stackmob:StackMob:5.8.2"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

task testLocal() {
    onlyIf = { true }
    dependsOn ":build"
    mustRunAfter ":build"
    doLast {
        exec {
            ignoreExitValue = true
            commandLine "./test_local.sh"
        }
    }
}

task publishServer() {
    onlyIf = { true }
    dependsOn ":build"
    mustRunAfter ":build"
    doLast {
        exec {
            ignoreExitValue = true
            commandLine "./publish_server.sh"
        }
    }
}
